// <auto-generated />
using System;
using CarAgency_WindowsDesktopApp.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarAgency_WindowsDesktopApp.Migrations
{
    [DbContext(typeof(CarAgencyDbContext))]
    [Migration("20240829093607_FixEnginesTableKeys")]
    partial class FixEnginesTableKeys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarAgency_WindowsDesktopApp.Entity.Model.Engine", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("MaxPowerBhp")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("MileageKmpl")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("PowerCC")
                        .HasColumnType("int");

                    b.Property<long?>("TorqueNm")
                        .HasColumnType("bigint");

                    b.Property<long?>("TorqueRpmMax")
                        .HasColumnType("bigint");

                    b.Property<long?>("TorqueRpmMin")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Engines");
                });

            modelBuilder.Entity("CarAgency_WindowsDesktopApp.Entity.Model.Enums.FuelType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("FuelTypes");
                });

            modelBuilder.Entity("CarAgency_WindowsDesktopApp.Entity.Model.Enums.OwnerType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("OwnerTypes");
                });

            modelBuilder.Entity("CarAgency_WindowsDesktopApp.Entity.Model.Enums.SellerType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("SellerTypes");
                });

            modelBuilder.Entity("CarAgency_WindowsDesktopApp.Entity.Model.Enums.TransmissionType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("TransmissionTypes");
                });

            modelBuilder.Entity("CarAgency_WindowsDesktopApp.Entity.Model.Engine", b =>
                {
                    b.HasOne("CarAgency_WindowsDesktopApp.Entity.Model.Enums.FuelType", "FuelType")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarAgency_WindowsDesktopApp.Entity.Model.Enums.TransmissionType", "TransmissionType")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FuelType");

                    b.Navigation("TransmissionType");
                });
#pragma warning restore 612, 618
        }
    }
}
